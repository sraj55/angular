{"version":3,"sources":["./src/app/pages/admin/sidebar/sidebar.component.ts","./src/app/pages/admin/sidebar/sidebar.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/services/signin.service.ts","./src/app/pages/admin/company/company.component.ts","./src/app/pages/admin/company/company.component.html","./src/app/services/auth.interceptor.ts","./src/environments/environment.ts","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/models/company.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/signin/signin.component.html","./src/app/pages/signin/signin.component.ts","./src/app/authguard/admin.guard.ts","./src/app/pages/profile/profile.component.html","./src/app/pages/profile/profile.component.ts","./src/app/app.module.ts","./src/app/services/company.service.ts","./src/app/pages/user/user-dashboard/user-dashboard.component.ts","./src/app/pages/user/user-dashboard/user-dashboard.component.html","./src/app/pages/admin/welcome/welcome.component.ts","./src/app/pages/admin/welcome/welcome.component.html","./src/environments/url.ts","./src/app/authguard/normal.guard.ts","./src/app/models/license.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/pages/signup/signup.component.html","./src/app/pages/signup/signup.component.ts","./src/app/services/user.service.ts","./src/app/pages/admin/dashboard/dashboard.component.ts","./src/app/pages/admin/dashboard/dashboard.component.html","./src/app/services/bootstrap-model.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n    <mat-action-list role=\"list\">\n        <button mat-list-item routerLink=\"/admin\">\n            <mat-icon mat-list-icon>home</mat-icon> Home\n        </button>\n        <button mat-list-item routerLink=\"/admin/profile\">\n            <mat-icon mat-list-icon>account_circle</mat-icon> Profile\n        </button>\n        <button mat-list-item routerLink=\"/admin/company\">\n            <mat-icon mat-list-icon>business</mat-icon> Company\n        </button>\n    </mat-action-list>\n</mat-card>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"home\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-6 offset-md-3\">\n                <h1 class=\"text-center\">Welcome to Magadh Dairy</h1>\n            </div>\n        </div>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Url } from 'src/environments/url';\nimport { SignIn } from '../models/signIn';\nimport { User } from '../models/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SigninService {\n\n\n  apiBaseUrl = Url.apiBaseUrl;\n\n\n  constructor(private http: HttpClient) { }\n\n  //get current user\n  public currentUser() {\n    return this.http.get(`${this.apiBaseUrl}/current-user`);\n  }\n\n  //get user by username\n  public getByUsername(username: any) {\n    return this.http.get(`${this.apiBaseUrl}/user/${username}`);\n  }\n\n\n  //generate token\n  public generateToken(signInData: SignIn) {\n    return this.http.post(`${this.apiBaseUrl}/generate-token`, signInData);\n  }\n\n  //set token in localStorage\n  public userToken(token: string) {\n    localStorage.setItem(\"token\", token);\n    return true;\n  }\n\n  //set username\n  public setUsername(username:string){\n    localStorage.setItem(\"username\",username);\n    return true;\n  }\n\n  //get username\n  public getUsername(){\n    return localStorage.getItem(\"username\");\n  }\n\n  // is user sign in or not\n  public isUserSignIn() {\n    let token = localStorage.getItem(\"token\");\n    if (token == undefined || token == null || token == '') {\n      return false;\n    }\n    return true;\n  }\n\n  //user sign out\n  public signOut() {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"role\");\n    return true;\n  }\n\n  //get user token\n  public getToken() {\n    return localStorage.getItem(\"token\");\n  }\n\n  //set user data\n  public setUser(user: User) {\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    return true;\n  }\n\n  //get user\n  public getUser() {\n    let user = localStorage.getItem(\"user\");\n    if (user != null) {\n      return JSON.stringify(user);\n    } else {\n      this.signOut();\n      return null;\n    }\n\n  }\n\n  //set user role\n  public setUserRole(role: any) {\n    localStorage.setItem(\"role\", role);\n    return true;\n  }\n\n  //get user role\n  public getUserRole() {\n    let role = localStorage.getItem(\"role\");\n    if (role != null) {\n      return role;\n    }\n    this.signOut();\n    return null;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Company } from 'src/app/models/company';\nimport { License } from 'src/app/models/license';\nimport { BootstrapModelService } from 'src/app/services/bootstrap-model.service';\nimport { CompanyService } from 'src/app/services/company.service';\n\n@Component({\n  selector: 'app-company',\n  templateUrl: './company.component.html',\n  styleUrls: ['./company.component.css']\n})\nexport class CompanyComponent implements OnInit {\n  profile: any;\n  status: boolean = true;\n  license = new License(\"\", \"\", \"\", \"\");\n  li: any[] = [this.license];\n\n  company = new Company(\"\", \"\", \"\", \"\", \"\", this.li);\n\n\n  constructor(private companyService: CompanyService,\n    private modal: BootstrapModelService) { }\n\n  ngOnInit(): void {\n    this.getCompanyDetails();\n  }\n\n  //get company details\n  public getCompanyDetails(){\n    this.companyService.companyProfile().subscribe(\n      response => {\n        this.profile = response;\n        this.status = false;\n        console.warn(this.profile);\n      }, error => {\n        console.warn(error);\n      }\n    )\n  }\n\n  //open for update comapny details\n  public openUpdateModal(targetModel: any, profile: any) {\n    this.modal.open(targetModel);\n    this.profile = profile;\n  }\n\n  //open for add comapny details\n  public openAddModal(targetModel: any) {\n    this.modal.open(targetModel);\n  }\n\n  //add comapny details\n  public onAddCompany(data: any) {\n    this.license = new License(data.licenseTitle, data.licenseNo, data.validFrom, data.validTo);\n    this.li = [this.license];\n    this.company = new Company(data.companyName, data.addLine, data.city, data.state, data.pincode, this.li);\n    console.log(this.company);\n\n    this.companyService.create(this.company).subscribe(\n      response => {\n        console.log(response);\n        this.getCompanyDetails();\n      }, error => {\n        console.log(error);\n      }\n    )\n  }\n\n}\n","<mat-card>\n    <div class=\"row\">\n        <div class=\"col\">\n            <h1>Company Details</h1>\n        </div>\n        <div *ngIf=\"profile\" class=\"col text-right\"><button mat-raised-button\n                (click)=\"openUpdateModal(update,profile)\">edit</button></div>\n    </div>\n    <mat-card-content>\n        <div class=\"wrapper\">\n            <div class=\"container\" *ngIf=\"status\">\n                <h2 class=\"text-center\">Loading...</h2>\n            </div>\n            <div class=\"container text-center\" *ngIf=\"!profile\">\n                <button (click)=\"openAddModal(add)\" mat-raised-button color=\"primary\">Add</button>\n            </div>\n            <div class=\"container\" *ngIf=\"profile\">\n                <table class=\"table table-bordered\">\n                    <tr>\n                        <td>Company Name</td>\n                        <td>{{profile.companyName}}</td>\n                    </tr>\n                    <tr>\n                        <td>Address</td>\n                        <td>{{profile.addLine}}, {{profile.city}}, {{profile.state}} ({{profile.pincode}})</td>\n                    </tr>\n                </table>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <h2>License</h2>\n                    </div>\n                    <div class=\"col text-right\"><button mat-raised-button color=\"primary\">Add</button></div>\n                </div>\n\n                <table class=\"table table-bordered\">\n                    <thead>\n                        <th>License Title</th>\n                        <th>License No</th>\n                        <th>Valid From</th>\n                        <th>Valid To</th>\n                        <th>Actions</th>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let  license of  profile.license\">\n                            <td>{{license.licenseTitle}}</td>\n                            <td>{{license.licenseNo}}</td>\n                            <td>{{license.validFrom}}</td>\n                            <td>{{license.validTo}}</td>\n                            <td><button mat-raised-button color=\"pink\" class=\"mr-2 mb-2\">edit</button><button\n                                    mat-raised-button color=\"warn\">delete</button></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </mat-card-content>\n</mat-card>\n\n<!--Edit Details-->\n<ng-template #update let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-basic-title\">Company Details</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <form #edit=\"ngForm\">\n        <div class=\"modal-body\">\n            <div class=\"form-group\">\n                <mat-form-field class=\"w-100\">\n                    <mat-label>Copany Name</mat-label>\n                    <input [hidden]=\"true\" type=\"number\" id=\"cid\" name=\"cid\" ngModel=\"{{profile.companyId}}\">\n\n                    <input matInput name=\"name\" ngModel=\"{{profile.companyName}}\">\n                </mat-form-field>\n            </div>\n            <div class=\"form-group\">\n                <mat-form-field class=\"w-100\">\n                    <mat-label>Address Line</mat-label>\n                    <textarea matInput name=\"addLine\" ngModel=\"{{profile.addLine}}\"></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"form-group\">\n\n                <mat-form-field class=\"w-50 pr-4\">\n                    <mat-label>City</mat-label>\n                    <input matInput name=\"city\" ngModel=\"{{profile.city}}\">\n                </mat-form-field>\n                <mat-form-field class=\"w-50\">\n                    <mat-label>State</mat-label>\n                    <input matInput name=\"state\" ngModel=\"{{profile.state}}\">\n                </mat-form-field>\n            </div>\n\n\n            <div class=\"form-group\">\n                <mat-form-field class=\"w-100\">\n                    <mat-label>Pin Code</mat-label>\n                    <input matInput name=\"pincode\" ngModel=\"{{profile.pincode}}\">\n                </mat-form-field>\n            </div>\n        </div>\n        <!-- <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"modal.dismiss('Cross click')\">\n                Close\n            </button>\n            <button type=\"submit\" class=\"btn btn-outline-primary\" (click)=\"onContactUpdate(editContact)\"\n                (click)=\"modal.close('Save click')\">Update</button>\n        </div> -->\n    </form>\n</ng-template>\n<!--END-->\n\n<!--ADD Company Details-->\n<ng-template #add let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-basic-title\">Add Company Details</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <form #addCompany=\"ngForm\" (ngSubmit)=\"onAddCompany(addCompany.value)\">\n        <div class=\"modal-body\">\n            <div class=\"form-group\">\n                <mat-form-field class=\"w-100\">\n                    <mat-label>Copany Name</mat-label>\n\n                    <input matInput name=\"companyName\" ngModel>\n                </mat-form-field>\n            </div>\n            <div class=\"form-group\">\n                <mat-form-field class=\"w-100\">\n                    <mat-label>Address Line</mat-label>\n                    <textarea matInput name=\"addLine\" ngModel></textarea>\n                </mat-form-field>\n            </div>\n            <div class=\"form-group\">\n\n                <mat-form-field class=\"w-50 pr-4\">\n                    <mat-label>City</mat-label>\n                    <input matInput name=\"city\" ngModel>\n                </mat-form-field>\n                <mat-form-field class=\"w-50\">\n                    <mat-label>State</mat-label>\n                    <input matInput name=\"state\" ngModel>\n                </mat-form-field>\n            </div>\n\n\n            <div class=\"form-group\">\n                <mat-form-field class=\"w-100\">\n                    <mat-label>Pin Code</mat-label>\n                    <input matInput name=\"pincode\" ngModel />\n                </mat-form-field>\n            </div>\n            <h4>License</h4>\n            <div class=\"form-group\">\n                <mat-form-field class=\"w-50 pr-4\">\n                    <mat-label>License Title</mat-label>\n                    <input matInput name=\"licenseTitle\" ngModel>\n                </mat-form-field>\n                <mat-form-field class=\"w-50\">\n                    <mat-label>License No</mat-label>\n                    <input matInput name=\"licenseNo\" ngModel>\n                </mat-form-field>\n            </div>\n            <div class=\"form-group\">\n                <mat-form-field class=\"w-50 pr-4\">\n                    <mat-label>Valid From</mat-label>\n                    <input matInput name=\"validFrom\" ngModel>\n                </mat-form-field>\n                <mat-form-field class=\"w-50\">\n                    <mat-label>Valid To</mat-label>\n                    <input matInput name=\"validTo\" ngModel>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"modal-footer\">\n            <button type=\"button\" mat-raised-button color=\"warn\" class=\"mr-2\" (click)=\"modal.dismiss('Cross click')\">\n                Cancel\n            </button>\n            <button [disabled]=\"addCompany.invalid\" type=\"submit\" \n                (click)=\"modal.close('Save click')\" mat-raised-button color=\"primary\">Save</button>\n        </div>\n    </form>\n</ng-template>\n<!--END-->","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { SigninService } from \"./signin.service\";\r\n\r\nconst TOKEN_HEADER='Authorization';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor{\r\n\r\n    constructor(private signIn:SigninService){}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        \r\n        const token = this.signIn.getToken();\r\n\r\n        let authReq=req;\r\n        console.log(\"inside interceptor\");\r\n        if(token!=null){\r\n            authReq=authReq.clone({\r\n                setHeaders:{'Authorization': `Bearer ${token}`}\r\n            });\r\n        }\r\n\r\n        return next.handle(authReq);\r\n    }\r\n\r\n}\r\n\r\nexport const authInceptorProviders = [\r\n{\r\n    provide:HTTP_INTERCEPTORS,\r\n    useClass:AuthInterceptor,\r\n    multi:true,\r\n}\r\n];","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import { License } from \"./license\";\r\n\r\nexport class Company {\r\n    companyId!: number;\r\n    companyName: string;\r\n    addLine: string;\r\n    city: string;\r\n    state: string;\r\n    pincode: string;\r\n    license: License[] = [];\r\n\r\n    constructor(companyName: string, addLine: string, city: string, state: string, pincode: string, license: License[]) {\r\n        this.companyName = companyName;\r\n        this.addLine = addLine;\r\n        this.city = city;\r\n        this.state = state;\r\n        this.pincode = pincode;\r\n        this.license = license;\r\n    }\r\n\r\n    public getId(): number {\r\n        return this.companyId;\r\n    }\r\n\r\n    public setId(id: number) {\r\n        this.companyId = id;\r\n    }\r\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'magadhdairy';\n}\n","<!-- navbar static -->\r\n<app-navbar></app-navbar>\r\n<!-- dynamic content -->\r\n<router-outlet></router-outlet>","<div class=\"signin\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-6 offset-md-3\">\n                <mat-card>\n                    <mat-card-title class=\"text-center pt-3 pb-3\">Sign In</mat-card-title>\n                    <form #signIn=\"ngForm\" (ngSubmit)=\"SignInFunction(signIn.value)\">\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                            <mat-label>Username</mat-label>\n                            <input name=\"username\" matInput ngModel placeholder=\"Username\" required>\n                        </mat-form-field>\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                            <mat-label>Password</mat-label>\n                            <input name=\"password\" type=\"password\" matInput ngModel placeholder=\"Password\" required>\n                        </mat-form-field>\n                        <div class=\"text-center\">\n                            <button *ngIf=\"!status\" class=\"mr-2 mb-2\" type=\"submit\" mat-raised-button\n                                color=\"primary\">Signin</button>\n                            <button *ngIf=\"status\" class=\"mr-2 mb-2\" mat-raised-button color=\"primary\" type=\"button\"\n                                aria-disabled=\"true\">\n                                <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                                Signin...\n                            </button>\n                            <button class=\"mr-2\" type=\"reset\" mat-raised-button color=\"accent\">Reset</button>\n                        </div>\n                    </form>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { SignIn } from 'src/app/models/signIn';\nimport { SigninService } from 'src/app/services/signin.service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.css']\n})\nexport class SigninComponent implements OnInit {\n\n  status: boolean = false;\n\n  constructor(private snack: MatSnackBar, private signIn: SigninService) { }\n\n  ngOnInit(): void {\n  }\n\n  public SignInFunction(signInData: SignIn) {\n\n    if (signInData.username == '' || signInData.username == null || signInData.password == '' || signInData.password == null) {\n      console.log(\"fields required!\");\n      this.snack.open('fields required!', '', {\n        duration: 3000\n      });\n      return;\n    }\n\n    this.status = true;\n    console.log(signInData);\n\n    //generate token\n    this.signIn.generateToken(signInData).subscribe(\n      (response: any) => {\n       \n        this.signIn.userToken(response.token);\n        this.signIn.currentUser().subscribe(\n          (user: any) => {\n            console.log(user.authorities[0].authority);\n            //set user\n            this.signIn.setUser(user);\n            //set username\n            this.signIn.setUsername(user.username);\n            //set user role\n            this.signIn.setUserRole(user.authorities[0].authority);\n            //check user authority\n            if (user.authorities[0].authority == 'ADMIN') {\n              //admin dashboard\n              window.location.href = '/admin';\n\n            } else if (user.authorities[0].authority == 'NORMAL') {\n              window.location.href = '/user-dashboard';\n            } else {\n              this.signIn.signOut();\n            }\n          }, (err: HttpErrorResponse) => {\n            console.log(err);\n          }\n        );\n      }, (error: HttpErrorResponse) => {\n        console.log(error);\n        this.status = false;\n        if (error.status == 0) {\n          this.snack.open('Server error!!', '', {\n            duration: 3000\n          });\n          return;\n        }\n        this.snack.open(error.error.message, '', {\n          duration: 3000\n        });\n      }\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { SigninService } from '../services/signin.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(private signIn: SigninService, private router: Router) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    if (this.signIn.isUserSignIn() && this.signIn.getUserRole() == 'ADMIN') {\n      return true;\n    }\n    this.router.navigate(['signin']);\n    return false;\n  }\n\n}\n","<mat-card>\n    <h1>Profile details</h1>\n    <mat-card-content>\n        <div class=\"wrapper\">\n            <div class=\"container\" *ngIf=\"!user\">\n                <h2 class=\"text-center\">Loading...</h2>\n            </div>\n            <div class=\"container\" *ngIf=\"user\">\n                <div class=\"text-center\">\n                    <img class=\"image\"\n                        src=\"https://banner2.kisspng.com/20180615/rtc/kisspng-avatar-user-profile-male-logo-profile-icon-5b238cb002ed52.870627731529056432012.jpg\"\n                        alt=\"\">\n                    <h2 class=\"mt-2\">{{user.firstName}} {{user.lastName}}</h2>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6 offset-md-3\">\n                        <table class=\"table table-bordered\">\n                            <tr>\n                                <td>Username</td><td>{{user.username}}</td>\n                            </tr>\n                            <tr>\n                                <td>Role</td><td>{{user.role[0].roleTitle}}</td>\n                            </tr>\n                            <tr>\n                                <td>Phone</td><td>{{user.phone}}</td>\n                            </tr>\n                            <tr>\n                                <td>Email</td><td>{{user.email}}</td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-raised-button color=\"primary\">Update</button>\n    </mat-card-actions>\n</mat-card>","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/User';\nimport { SigninService } from 'src/app/services/signin.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  username!: string | null;\n  user: any;\n \n\n  constructor(private signIn: SigninService) { }\n\n  ngOnInit(): void {\n    this.username = this.signIn.getUsername();\n   \n    this.signIn.getByUsername(this.username).subscribe(\n      (response:any)=>{\n        this.user=response;\n      },(error:HttpErrorResponse)=>{\n        console.log(error);\n      }\n    )\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { SignupComponent } from './pages/signup/signup.component';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport{FormsModule} from '@angular/forms';\nimport{HttpClientModule} from '@angular/common/http';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport { HomeComponent } from './pages/home/home.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport{FlexLayoutModule,FlexModule} from '@angular/flex-layout';\nimport { authInceptorProviders } from './services/auth.interceptor';\nimport { DashboardComponent } from './pages/admin/dashboard/dashboard.component';\nimport { UserDashboardComponent } from './pages/user/user-dashboard/user-dashboard.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport {MatListModule} from '@angular/material/list';\nimport { SidebarComponent } from './pages/admin/sidebar/sidebar.component';\nimport { WelcomeComponent } from './pages/admin/welcome/welcome.component';\nimport { CompanyComponent } from './pages/admin/company/company.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    FooterComponent,\n    SignupComponent,\n    SigninComponent,\n    HomeComponent,\n    DashboardComponent,\n    UserDashboardComponent,\n    ProfileComponent,\n    SidebarComponent,\n    WelcomeComponent,\n    CompanyComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    NgbModule,\n    MatInputModule,\n    MatButtonModule,\n    FormsModule,\n    HttpClientModule,\n    MatSnackBarModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatIconModule,\n    FlexLayoutModule,\n    FlexModule,\n    MatListModule,\n  ],\n  providers: [authInceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Url } from 'src/environments/url';\nimport { Company } from '../models/company';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompanyService {\n\n  apiBaseUrl = Url.apiBaseUrl;\n  constructor(private http: HttpClient) { }\n\n  //get company profile\n  public companyProfile() {\n    return this.http.get(`${this.apiBaseUrl}/company/profile`)\n  }\n\n  //create company profile\n  public create(company: Company) {\n    return this.http.post(`${this.apiBaseUrl}/company/create`, company);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.css']\n})\nexport class UserDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>user-dashboard works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n    <h1>Welcome to admin panel</h1>\n</mat-card>","export class Url{\r\n   // apiBaseUrl:'http://192.168.43.56:8080' :string;\r\n    // apiBaseUrl:'http://192.168.43.56:8080' :string;\r\n    static apiBaseUrl: string ='http://192.168.43.56:8080';\r\n}","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { SigninService } from '../services/signin.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NormalGuard implements CanActivate {\n  constructor(private signIn: SigninService, private router: Router) { }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    if (this.signIn.isUserSignIn() && this.signIn.getUserRole() == 'NORMAL') {\n      return true;\n    }\n\n    this.router.navigate(['signin']);\n    return false;\n  }\n\n}\n","export class License {\r\n    licenseId!: number;\r\n    licenseTitle: string;\r\n    licenseNo: string;\r\n    validFrom: string;\r\n    validTo: string;\r\n    constructor(licenseTitle: string,\r\n        licenseNo: string,\r\n        validFrom: string,\r\n        validTo: string) {\r\n        this.licenseTitle = licenseTitle;\r\n        this.licenseNo = licenseNo;\r\n        this.validFrom = validFrom;\r\n        this.validTo = validTo;\r\n    }\r\n\r\n    public getId(): number {\r\n        return this.licenseId;\r\n    }\r\n\r\n    public setId(id: number) {\r\n        this.licenseId = id;\r\n    }\r\n}","<mat-toolbar color=\"primary\">\n    <a routerLink=\"/\" mat-icon-button class=\"icon\" aria-label=\"home\">\n        <mat-icon>home</mat-icon>\n    </a>\n    <span>Magadh Dairy</span>\n    <span class=\"spacer\"></span>\n    <a *ngIf=\"!isUserSignIn\" [routerLink]=\"'/signin'\" mat-icon-button class=\"icon favorite-icon mr-5\"\n        aria-label=\"Signin\">\n        <mat-icon>login</mat-icon> Sign In\n    </a>\n    <a *ngIf=\"isUserSignIn\" (click)=\"signOut()\" mat-icon-button class=\"icon favorite-icon mr-5\" aria-label=\"Signout\">\n        <mat-icon>logout</mat-icon> Sign Out\n    </a>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { SigninService } from 'src/app/services/signin.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public signIn: SigninService) { }\n\n  isUserSignIn = false;\n\n  ngOnInit(): void {\n    this.isUserSignIn = this.signIn.isUserSignIn();\n  }\n\n\n  //sign out function\n  public signOut() {\n    this.signIn.signOut();\n    window.location.reload();\n  }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-6 offset-md-3\">\n                <mat-card>\n                    <mat-card-title class=\"text-center pt-3 pb-3\">Sign Up</mat-card-title>\n                    <form #signup=\"ngForm\" (ngSubmit)=\"SignupForm(signup.value)\">\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                            <mat-label>First Name</mat-label>\n                            <input name=\"firstName\" matInput ngModel placeholder=\"First Name\" required>\n                        </mat-form-field>\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                            <mat-label>Last Name</mat-label>\n                            <input name=\"lastName\" matInput ngModel placeholder=\"Last Name\" required>\n                        </mat-form-field>\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                            <mat-label>Username</mat-label>\n                            <input name=\"username\" matInput ngModel placeholder=\"Username\" required>\n\n                        </mat-form-field>\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                            <mat-label>Password</mat-label>\n                            <input name=\"password\" type=\"password\" matInput ngModel placeholder=\"Password\" required>\n                        </mat-form-field>\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                            <mat-label>Email</mat-label>\n                            <input name=\"email\" type=\"email\" matInput ngModel placeholder=\"Email\" required>\n                        </mat-form-field>\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                            <mat-label>Phone Number</mat-label>\n                            <input name=\"phone\" type=\"number\" matInput ngModel placeholder=\"Phone Number\" required>\n                        </mat-form-field>\n                        <div class=\"text-center\">\n                            <button *ngIf=\"!status\" class=\"mr-2 mb-2\" type=\"submit\" mat-raised-button color=\"primary\">Signup</button>\n                            <button *ngIf=\"status\" class=\"mr-2 mb-2\" mat-raised-button color=\"primary\" type=\"button\" aria-disabled=\"true\">\n                                <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n                                Signup...\n                            </button>\n                            <button class=\"mr-2\" type=\"reset\" mat-raised-button color=\"accent\">Reset</button>\n                        </div>\n                    </form>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { User } from 'src/app/models/User';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  status:boolean=false;\n\n  constructor(private userService: UserService, private snack: MatSnackBar) { }\n\n  ngOnInit(): void {\n  }\n\n  //user registration\n  public SignupForm(user: User) {\n\n    if (user.username == '' || user.username == null || user.password == '' || user.password == null\n    ||user.email == '' || user.email == null || user.phone == '' || user.phone == null\n    ||user.firstName == '' || user.firstName == null || user.lastName == '' || user.lastName == null) {\n      console.log(\"fields required!\");\n      this.snack.open('fields required!', '', {\n        duration: 3000\n      });\n      return;\n    }\n\n    this.status=true;\n    console.log(user);\n  \n    this.userService.addUser(user).subscribe(\n      (response: any) => {\n        console.log(response);\n        this.snack.open('Successfully registered!!', '', {\n          duration: 5000\n        });\n        this.status=false;\n      }, (error: HttpErrorResponse) => {\n        console.log(error);\n        if (error.status == 0) {\n          console.log(\"server not start!!\");\n          this.snack.open('Opps Server not start yet!!', '', {\n            duration: 3000\n          });\n        } else {\n          this.snack.open(error.error.message, '', {\n            duration: 3000\n          });\n        }\n        this.status=false;\n      }\n    );\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Url } from 'src/environments/url';\nimport { User } from '../models/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  apiBaseUrl=Url.apiBaseUrl;\n\n  constructor(private http:HttpClient) { }\n\n  //add user\n  public addUser(user:User){\n    return this.http.post(`${this.apiBaseUrl}/user/add`,user);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-2\">\n                <app-sidebar></app-sidebar>\n            </div>\n            <div class=\"col-md-10\">\n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BootstrapModelService {\n  closeResult!: string;\n\n  constructor(public modal:NgbModal) { }\n\n  public open(mode: any): void {\n    this.modal.open(mode, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminGuard } from './authguard/admin.guard';\nimport { NormalGuard } from './authguard/normal.guard';\nimport { CompanyComponent } from './pages/admin/company/company.component';\nimport { DashboardComponent } from './pages/admin/dashboard/dashboard.component';\nimport { WelcomeComponent } from './pages/admin/welcome/welcome.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { SigninComponent } from './pages/signin/signin.component';\nimport { SignupComponent } from './pages/signup/signup.component';\nimport { UserDashboardComponent } from './pages/user/user-dashboard/user-dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'signin',\n    component: SigninComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: \"signup\",\n    component: SignupComponent,\n    pathMatch: \"full\",\n  },\n  {\n    path: \"admin\",\n    component: DashboardComponent,\n    canActivate: [AdminGuard],\n    children: [\n      {\n        path: '',\n        component: WelcomeComponent\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent\n      },\n      {\n        path: 'company',\n        component: CompanyComponent\n      }\n    ]\n  },\n  {\n    path: \"user-dashboard\",\n    component: UserDashboardComponent,\n    pathMatch: \"full\",\n    canActivate: [NormalGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}